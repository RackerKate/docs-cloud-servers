<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter [
<!ENTITY % common  SYSTEM "../../common/common.ent">
%common;
]>

<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xmlns:raxm="http://docs.rackspace.com/api/metadata"
    xml:id="api_operations_neutron">
    <title>API operations</title>
    <para>The Rackspace Cloud Servers API v2 serves the following functions: <itemizedlist>
            <listitem>
                <para>stuff.</para>
            </listitem>
        </itemizedlist>
    </para>

    <section xml:id="api_servers">
        <title>Servers</title>
        <para>This section describes the API operations for servers.</para>
        <section xml:id="api_servers_basic">
            <title>Basic Server Operations</title>
            <para>This section describes the basic API operations for servers: create, read, update, and delete.</para>
            <note>
                <para>For the full list of server status values, see <olink targetdoc="cs-devguide" targetptr="Server_stati"
                        >“Possible values for server status”</olink>.</para>
            </note>
            <!--- this section comes from these WADLs: servers.wadl -->
            <wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
                <!-- create server -->
                <wadl:resource href="../../wadl/servers.wadl#Servers">
                    <wadl:method href="createServer"/>
                </wadl:resource>
                <!-- list server -->
                <wadl:resource href="../../wadl/servers.wadl#Servers">
                    <wadl:method href="listServers"/>
                </wadl:resource>
                <!-- list server details-->
                <wadl:resource href="../../wadl/servers.wadl#ServersDet">
                    <wadl:method href="listServersDetails"/>
                </wadl:resource>
                <!-- get server details-->
                <wadl:resource href="../../wadl/servers.wadl#Server_id">
                    <wadl:method href="getServer"/>
                </wadl:resource>
                <!-- update server-->
                <wadl:resource href="../../wadl/servers.wadl#Server_id">
                    <wadl:method href="updateServer"/>
                </wadl:resource>
                <!-- delete server -->
                <wadl:resource href="../../wadl/servers.wadl#Server_id">
                    <wadl:method href="deleteServer"/>
                </wadl:resource>
            </wadl:resources>
            <section xml:id="Server_stati">
                <title>Possible values for server status</title>
                <para>The server status can contain the following values:</para>
                <itemizedlist xml:id="server_status_list">
                    <listitem>
                        <para><code>ACTIVE</code>. The server is active.</para>
                    </listitem>
                    <listitem>
                        <para><code>BUILDING</code>. The server has not finished the original build process.</para>
                    </listitem>
                    <listitem>
                        <para><code>DELETED</code>. The server is permanently deleted.</para>
                    </listitem>
                    <listitem>
                        <para><code>ERROR</code>. The server is in error.</para>
                    </listitem>
                    <listitem>
                        <para><code>HARD_REBOOT</code>. The server is hard rebooting. This is equivalent to pulling the power
                            plug on a physical server, plugging it back in, and rebooting it.</para>
                    </listitem>
                    <listitem>
                        <para><code>PASSWORD</code>. The password is being reset on the server.</para>
                    </listitem>
                    <listitem>
                        <para><code>PAUSED</code>. In a paused state, the state of the server is stored in RAM. A paused
                            server continues to run in frozen state.</para>
                    </listitem>
                    <listitem>
                        <para><code>REBOOT</code>. The server is in a soft reboot state. A reboot command was passed to the
                            operating system.</para>
                    </listitem>
                    <listitem>
                        <para><code>REBUILD</code>. The server is currently being rebuilt from an image.</para>
                    </listitem>
                    <listitem>
                        <para><code>RESCUED</code>. The server is in rescue mode. A rescue image is running with the original
                            server image attached.</para>
                    </listitem>
                    <listitem>
                        <para><code>RESIZED</code>. Server is performing the differential copy of data that changed during
                            its initial copy. Server is down for this stage.</para>
                    </listitem>
                    <listitem>
                        <para><code>REVERT_RESIZE</code>. The resize or migration of a server failed for some reason. The
                            destination server is being cleaned up and the original source server is restarting.</para>
                    </listitem>
                    <listitem>
                        <para><code>SHUTOFF</code>. The virtual machine (VM) was powered down by the user, but not through
                            the Rackspace Cloud Servers API. For example, the user issued a <code>shutdown -h</code> command
                            from within the server instance. If the Rackspace Cloud Servers service manager detects that the
                            VM was powered down, it transitions the server instance to the SHUTOFF status. If you use the API
                            to restart the instance, the instance might be deleted first, depending on the value in the
                                <parameter>shutdown_terminate</parameter> database field on the Instance model.</para>
                    </listitem>
                    <listitem>
                        <para><code>SOFT_DELETED</code>. The server is marked as deleted but the disk images are still
                            available to restore.</para>
                    </listitem>
                    <listitem>
                        <para><code>STOPPED</code>. The server is powered off and the disk image still persists.</para>
                    </listitem>
                    <listitem>
                        <para><code>SUSPENDED</code>. The server is suspended, either by request or necessity. This status
                            appears for only the following hypervisors: XenServer/XCP, KVM, and ESXi. Administrative users
                            may suspend an instance if it is infrequently used or to perform system maintenance. When you
                            suspend an instance, its VM state is stored on disk, all memory is written to disk, and the
                            virtual machine is stopped. Suspending an instance is similar to placing a device in hibernation;
                            memory and vCPUs become available to create other instances.</para>
                    </listitem>
                    <listitem>
                        <para><code>UNKNOWN</code>. The state of the server is unknown. Contact Rackspace support.</para>
                    </listitem>
                    <listitem>
                        <para><code>VERIFY_RESIZE</code>. System is awaiting confirmation that the server is operational
                            after a move or resize.</para>
                    </listitem>
                </itemizedlist>
            </section>
        </section>
        <section xml:id="api_servers_addresses">
            <title>Server Address Operations</title>
            <para>This section describes the API operations for server addresses.</para>
            <!--- this section comes from these WADLs: servers.wadl -->
            <wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
                <!-- list server addresses-->
                <wadl:resource href="../../wadl/servers.wadl#IPs">
                    <wadl:method href="listServerAddresses"/>
                </wadl:resource>
                <!-- list server addresses by network type-->
                <wadl:resource href="../../wadl/servers.wadl#Network_label">
                    <wadl:method href="listServerAddressesbyNetwork"/>
                </wadl:resource>
            </wadl:resources>
        </section>
        <section xml:id="api_servers_actions">
            <title>Server Actions Operations</title>
            <para>This section describes the API operations for server actions.</para>
            <para><note>
                    <para>The base URI is the same for all server actions. The request body identifies which action to
                        take.</para>
            </note></para>
            <!--- this section comes from these WADLs: servers.wadl -->
            <wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
                <!-- change password-->
                <wadl:resource href="../../wadl/servers.wadl#Actions">
                    <wadl:method href="changePassword"/>
                </wadl:resource>
                <!-- reboot server-->
                <wadl:resource href="../../wadl/servers.wadl#Actions">
                    <wadl:method href="rebootServer"/>
                </wadl:resource>
                <!-- rebuild server-->
                <wadl:resource href="../../wadl/servers.wadl#Actions">
                    <wadl:method href="rebuildServer"/>
                </wadl:resource>
                <!-- resize server-->
                <wadl:resource href="../../wadl/servers.wadl#Actions">
                    <wadl:method href="resizeServer"/>
                </wadl:resource>
                <!-- confirm server-->
                <wadl:resource href="../../wadl/servers.wadl#Actions">
                    <wadl:method href="confirmResizeServer"/>
                </wadl:resource>
                <!-- revert server-->
                <wadl:resource href="../../wadl/servers.wadl#Actions">
                    <wadl:method href="revertResizeServer"/>
                </wadl:resource>
                <!-- rescue server-->
                <wadl:resource href="../../wadl/servers.wadl#Actions">
                    <wadl:method href="rescueServer"/>
                </wadl:resource>
                <!-- unrescue server-->
                <wadl:resource href="../../wadl/servers.wadl#Actions">
                    <wadl:method href="unrescueServer"/>
                </wadl:resource>
                <!-- create image-->
                <wadl:resource href="../../wadl/servers.wadl#Actions">
                    <wadl:method href="createImage"/>
                </wadl:resource>
            </wadl:resources>
        </section>
    </section>
    <section xml:id="api_supporting">
        <title>Supporting Operations</title>
        <para>This section describes the API operations for supporting functions of servers.</para>

        <section xml:id="Limits">
            <title>Limits</title>
            <para>Accounts are configured with thresholds, or limits, that manage capacity and prevent abuse of the
                system.</para>
            <para>The system recognizes the following types of limits: <itemizedlist xml:id="limit_list">
                    <listitem>
                        <para>rate limits. Control the frequency at which the user can issue specific API requests. See
                            (INSERT LINK HERE).</para>
                    </listitem>
                    <listitem>
                        <para>absolute limits. Control the total number of specific objects that the user can process
                            simultaneously. See (INSERT LINK HERE). </para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>To query the limits programmatically, see (INSERT LINK HERE).</para>

            <!--- this section comes from these WADLs: supporting.wadl -->
            <wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">

                <!-- retrieve list of rate limits -->
                <wadl:resource href="../../wadl/supporting.wadl#Limits">
                    <wadl:method href="retrieveListRateLimits"/>
                </wadl:resource>


                <wadl:resource href="../../wadl/supporting.wadl#Limits">
                    <wadl:method href="retrieveListAbsoluteLimits"/>
                </wadl:resource>
            </wadl:resources>
        </section>

        <section xml:id="Flavors">
            <title>Flavors</title>
            <para>A flavor is a resource configuration for a server. Each flavor is a unique combination of disk, memory,
                vCPUs, and network bandwidth.</para>
            <!--- this section comes from these WADLs: supporting.wadl -->
            <wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">

                <!-- retrieve list flavors -->
                <wadl:resource href="../../wadl/supporting.wadl#Flavors">
                    <wadl:method href="retrieveListFlavors"/>
                </wadl:resource>


                <!-- retrieve flavor details -->
                <wadl:resource href="../../wadl/supporting.wadl#Flavors">
                    <wadl:method href="retrieveFlavorDetails"/>
                </wadl:resource>
            </wadl:resources>
        </section>

        <section xml:id="Images">
            <title>Images</title>
            <para>An image is a collection of files for a specific operating system (OS) that you use to create or rebuild a
                server. Rackspace provides prebuilt images.</para>
            <para>You can also create custom images from servers that you have launched, by using server action (INSERT LINK
                HERE). You can use custom images for data backups or as "gold" images for provisioning additional
                servers.</para>
            <para><important>
                    <para>In addition to creating images manually, you can also schedule images of your server automatically.
                        See (INSERT LINK HERE) for more information about this extension, including enabling and disabling
                        scheduled images and showing scheduled images.</para>
                </important></para>
            <para>With standard servers, the entire disk (O/S and data) is captured in the image. With Compute, Memory, and
                IO servers, only the system disk is captured in the image. The data disks should be backed up using Cloud
                Backup or Cloud Block Storage to ensure availability in case you need to rebuild or restore a server.</para>
            <!--- this section comes from these WADLs: supporting.wadl -->
            <wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">

                <!-- retrieve list images -->
                <wadl:resource href="../../wadl/supporting.wadl#Images">
                    <wadl:method href="retrieveListImages"/>
                </wadl:resource>

                <!-- retrieve list images with details -->
                <wadl:resource href="../../wadl/supporting.wadl#Images">
                    <wadl:method href="retrieveListImagesWithDetails"/>
                </wadl:resource>

                <!-- retrieve image details -->

                <wadl:resource href="../../wadl/supporting.wadl#Images">
                    <wadl:method href="retrieveImageDetails"/>
                </wadl:resource>


                <!-- delete image -->
                <wadl:resource href="../../wadl/supporting.wadl#Images">
                    <wadl:method href="deleteImage"/>
                </wadl:resource>
            </wadl:resources>

        </section>
    </section>




    <!--<section xml:id="api_extensions">
        <!-\-\- this section comes from these WADLs: extensions.wadl -\->
        <title>Extensions</title>
        <para>This section describes the API operations for server extensions.</para>
        <!-\-\- this section comes from these WADLs: extensions.wadl -\->
        <wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
            <!-\- create multiple subnets -\->
            <!-\-<wadl:resource href="../../wadl/subnets.wadl#Subnets">
                <wadl:method href="bulkCreateSubnet"/>
            </wadl:resource>-\->
        </wadl:resources>
    </section>-->
</chapter>
